# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api import environment_pb2 as api_dot_environment__pb2


class EnvironmentStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStates = channel.unary_unary(
                '/collector.Environment/GetStates',
                request_serializer=api_dot_environment__pb2.GetStatesRequest.SerializeToString,
                response_deserializer=api_dot_environment__pb2.GetStatesResponse.FromString,
                )
        self.ApplyActions = channel.unary_unary(
                '/collector.Environment/ApplyActions',
                request_serializer=api_dot_environment__pb2.ApplyActionsRequest.SerializeToString,
                response_deserializer=api_dot_environment__pb2.ApplyActionsResponse.FromString,
                )
        self.GetRewardMetrics = channel.unary_unary(
                '/collector.Environment/GetRewardMetrics',
                request_serializer=api_dot_environment__pb2.GetRewardMetricsRequest.SerializeToString,
                response_deserializer=api_dot_environment__pb2.GetRewardMetricsResponse.FromString,
                )
        self.InitEnvironment = channel.unary_unary(
                '/collector.Environment/InitEnvironment',
                request_serializer=api_dot_environment__pb2.InitEnvironmentRequest.SerializeToString,
                response_deserializer=api_dot_environment__pb2.InitEnvironmentResponse.FromString,
                )


class EnvironmentServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetStates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApplyActions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRewardMetrics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitEnvironment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EnvironmentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStates,
                    request_deserializer=api_dot_environment__pb2.GetStatesRequest.FromString,
                    response_serializer=api_dot_environment__pb2.GetStatesResponse.SerializeToString,
            ),
            'ApplyActions': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyActions,
                    request_deserializer=api_dot_environment__pb2.ApplyActionsRequest.FromString,
                    response_serializer=api_dot_environment__pb2.ApplyActionsResponse.SerializeToString,
            ),
            'GetRewardMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRewardMetrics,
                    request_deserializer=api_dot_environment__pb2.GetRewardMetricsRequest.FromString,
                    response_serializer=api_dot_environment__pb2.GetRewardMetricsResponse.SerializeToString,
            ),
            'InitEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.InitEnvironment,
                    request_deserializer=api_dot_environment__pb2.InitEnvironmentRequest.FromString,
                    response_serializer=api_dot_environment__pb2.InitEnvironmentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'collector.Environment', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Environment(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/collector.Environment/GetStates',
            api_dot_environment__pb2.GetStatesRequest.SerializeToString,
            api_dot_environment__pb2.GetStatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ApplyActions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/collector.Environment/ApplyActions',
            api_dot_environment__pb2.ApplyActionsRequest.SerializeToString,
            api_dot_environment__pb2.ApplyActionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRewardMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/collector.Environment/GetRewardMetrics',
            api_dot_environment__pb2.GetRewardMetricsRequest.SerializeToString,
            api_dot_environment__pb2.GetRewardMetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/collector.Environment/InitEnvironment',
            api_dot_environment__pb2.InitEnvironmentRequest.SerializeToString,
            api_dot_environment__pb2.InitEnvironmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
